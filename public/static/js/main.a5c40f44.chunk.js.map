{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","event","end","moment","toDate","start","eventAddNew","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","closeTimeoutMS","style","overlayClassName","ariaHideApp","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","view","onView","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","path","exact","rootReducer","combineReducers","action","filter","cheching","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5c40f44.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n     const url = `${baseUrl}/${endpoint}`;\r\n      if (method === 'GET'){\r\n           return fetch(url);\r\n      } else {\r\n           return fetch(url, {\r\n                method,\r\n                headers: {\r\n                     'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n           })\r\n      }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n     const url = `${baseUrl}/${endpoint}`;\r\n     const token = localStorage.getItem('token') || '';\r\n\r\n      if (method === 'GET'){\r\n           return fetch(url, {\r\n                method,\r\n                headers: {\r\n                     'x-token': token\r\n                }\r\n           });\r\n      } else {\r\n           return fetch(url, {\r\n                method,\r\n                headers: {\r\n                     'Content-type': 'application/json',\r\n                     'x-token': token\r\n                },\r\n                body: JSON.stringify(data)\r\n           })\r\n      }\r\n}\r\n\r\n\r\nexport {\r\n     fetchSinToken,\r\n     fetchConToken\r\n}","\r\n\r\nexport const types = {\r\n     uiOpenModal: '[UI] Open modal',\r\n     uiCloseModal: '[UI] Close modal',\r\n\r\n\r\n     eventAddNew: '[Event] Add new',\r\n     eventStartAddNew: '[Event] Start Add New',\r\n     eventSetActive: '[Event] Set active',\r\n     eventClearActiveEvent: '[Event] Clear active',\r\n     eventUpdated:'[Event] Event updated',\r\n     eventDeleted:'[Event] Event deleted',\r\n     eventLoaded: '[Event] event loaded',\r\n     eventLogout: '[Event] event logout',\r\n\r\n     authCheckingFinish: '[auth] Finish checking login state',\r\n     authStartLogin: '[auth] Start login',\r\n     authLogin: '[auth] Login',\r\n     authStartRegister: '[auth] Start register',\r\n     authStartTokenRenew: '[auth] Start token renew',\r\n     authLogout: '[auth] Logout'\r\n\r\n}","import moment from 'moment'\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n     return events.map(event => ({\r\n          ...event,\r\n          end: moment( event.end ).toDate(),\r\n          start: moment( event.start).toDate()\r\n     }))\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n     return async (dispatch, getState) => {\r\n\r\n          const {uid, name} = getState().auth\r\n\r\n          try {\r\n               const resp = await fetchConToken('events', event, 'POST');\r\n               const body = await resp.json();\r\n\r\n               if(body.ok) {\r\n                    event.id = body.evento.id;\r\n                    event.user = {\r\n                         _id: uid,\r\n                         name\r\n                    }\r\n                    dispatch(eventAddNew(event));\r\n               }\r\n\r\n          } catch (error) {\r\n               console.log(error)\r\n          }\r\n\r\n     }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n     type: types.eventAddNew,\r\n     payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n     type: types.eventSetActive,\r\n     payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n     type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n     return async (dispatch) => {\r\n          try {\r\n\r\n               const resp = await fetchConToken(`events/${event.id}`, event , 'PUT');\r\n\r\n               const body = await resp.json();\r\n\r\n               if (body.ok) {\r\n                    dispatch(eventUpdated(event))\r\n               } else {\r\n                    Swal.fire('Error', body.msg, 'error')\r\n               }\r\n               \r\n          } catch (error) {\r\n               console.log(error)\r\n          }\r\n     }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n     type: types.eventUpdated,\r\n     payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n     return async(dispatch, getState) => {\r\n\r\n          const {activeEvent} = getState().calendar\r\n\r\n          try {\r\n\r\n               const resp = await fetchConToken(`events/${activeEvent.id}`, {} , 'DELETE');\r\n\r\n               const body = await resp.json();\r\n\r\n               if (body.ok) {\r\n                    dispatch(eventDeleted())\r\n               } else {\r\n                    Swal.fire('Error', body.msg, 'error')\r\n               }\r\n               \r\n          } catch (error) {\r\n               console.log(error)\r\n          }\r\n     }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n     type: types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n     return async (dispatch) => {\r\n          \r\n          try {\r\n               const resp = await fetchConToken('events');\r\n               const body = await resp.json();\r\n\r\n               if (body.ok) {\r\n                    const events = prepareEvents(body.eventos);\r\n\r\n                    dispatch(eventLoaded(events))\r\n               }\r\n\r\n          } catch (error) {\r\n               console.log(error)\r\n          }\r\n     }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n     type: types.eventLoaded,\r\n     payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n     type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\n export const startLogin = (email, password) => {\r\n      return async (dispatch) => {\r\n          \r\n          const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n\r\n          const body = await resp.json();\r\n\r\n          if(body.ok) {\r\n               localStorage.setItem('token', body.token);\r\n               localStorage.setItem('token-init-date',new Date().getTime());\r\n\r\n               dispatch(login({\r\n                    uid: body.uid,\r\n                    name: body.name\r\n               }))\r\n          } else {\r\n               Swal.fire('Error', body.msg, 'error');\r\n          }\r\n\r\n      }\r\n }\r\n\r\n export const startRegister = (name, email, password) => {\r\n      return async (dispatch) => {\r\n\r\n          const resp = await fetchSinToken('auth/new', {name, email, password}, 'POST');\r\n\r\n          const body = await resp.json();\r\n\r\n          if(body.ok) {\r\n               localStorage.setItem('token', body.token);\r\n               localStorage.setItem('token-init-date',new Date().getTime());\r\n\r\n               dispatch(login({\r\n                    uid: body.uid,\r\n                    name: body.name\r\n               }))\r\n          } else {\r\n               Swal.fire('Error', body.msg, 'error');\r\n          }\r\n\r\n\r\n      }\r\n }\r\n\r\n export const startChecking = () => {\r\n\r\n     return async (dispatch) => {\r\n\r\n          const resp = await fetchConToken('auth/renew');\r\n\r\n          const body = await resp.json();\r\n\r\n          if(body.ok) {\r\n               localStorage.setItem('token', body.token);\r\n               localStorage.setItem('token-init-date',new Date().getTime());\r\n\r\n               dispatch(login({\r\n                    uid: body.uid,\r\n                    name: body.name\r\n               }))\r\n          } else {\r\n               dispatch(checkingFinish());\r\n          }\r\n     }\r\n }\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\n const login = (user) => ({\r\n     type: types.authLogin,\r\n     payload: user\r\n });\r\n\r\n export const startLogout = () => {\r\n      return async (dispatch) =>{\r\n           localStorage.clear();\r\n \r\n           dispatch( eventLogout() );\r\n\r\n           dispatch(logout());\r\n\r\n      }\r\n }\r\n\r\n const logout = () => ({\r\n      type: types.authLogout\r\n })","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Adriana',\r\n        rEmail: 'adrianacaarl@gmail.com',\r\n        rPassword1: '',\r\n        rPassword2: ''\r\n    });\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(lEmail, lPassword));\r\n        \r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas no coinciden', 'error');\r\n        }\r\n\r\n        dispatch(startRegister(rName, rEmail, rPassword1));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n     const dispatch = useDispatch()\r\n     const {name} = useSelector(state => state.auth);\r\n\r\n     const handleLogout = () => {\r\n          dispatch(startLogout());\r\n     }\r\n\r\n     return (\r\n          <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n               <span className=\"navbar-brand\">\r\n                    {name}\r\n               </span>\r\n               <button \r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={handleLogout}\r\n               >\r\n                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                    <span> Salir</span>\r\n               </button>\r\n          </div>\r\n     )\r\n}\r\n","export const messages = {\r\n     allDay: 'Todo el día',\r\n     previous: '<',\r\n     next: '>',\r\n     today: 'Hoy',\r\n     month: 'Mes',\r\n     week: 'Semana',\r\n     day: 'Día',\r\n     agenda: 'Agenda',\r\n     date: 'Fecha',\r\n     time: 'Hora',\r\n     event: 'Evento',\r\n     noEventsInRange: 'No hay eventos en este rango',\r\n     showMore: total => `+ Ver más (${total})`\r\n };","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n     const {title, user} = event\r\n\r\n     return (\r\n          <div>\r\n               <strong> {title} </strong>\r\n               <span>- {user.name}</span>\r\n          </div>\r\n     )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n     type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n     type: types.uiCloseModal\r\n})","import React, { useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate} from '../../actions/events';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst customStyles = {\r\n     content: {\r\n          top: '50%',\r\n          left: '50%',\r\n          right: 'auto',\r\n          bottom: 'auto',\r\n          marginRight: '-50%',\r\n          transform: 'translate(-50%, -50%)',\r\n     },\r\n};\r\n\r\nif (process.env.NODE_ENV !== 'test') {\r\n     Modal.setAppElement('#root');\r\n}\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n     title: '',\r\n     notes: '',\r\n     start: now.toDate(),\r\n     end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n     const {modalOpen} = useSelector(state => state.ui);\r\n     const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n     const dispatch = useDispatch()\r\n\r\n     const [dateStart, setDateStart] = useState(now.toDate())\r\n     const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n     const [titleValid, setTitleValid] = useState(true)\r\n\r\n     const [formValues, setFormValues] = useState(initEvent);\r\n\r\n     const {title, notes, start, end} = formValues;\r\n\r\n     useEffect(() => {\r\n          if(activeEvent) {\r\n               setFormValues(activeEvent)\r\n          } else {\r\n               setFormValues(initEvent)\r\n          }\r\n     }, [activeEvent, setFormValues ])\r\n\r\n\r\n     const handleInputChange = ({target}) => {\r\n          setFormValues({\r\n               ...formValues,\r\n               [target.name]: target.value\r\n          })\r\n     }\r\n\r\n     const closeModal = () => {\r\n          dispatch(uiCloseModal());\r\n          dispatch(eventClearActiveEvent())\r\n          setFormValues(initEvent)\r\n     }\r\n\r\n     const handleStartDateChange = (e) => {\r\n          setDateStart(e);\r\n          setFormValues({\r\n               ...formValues,\r\n               start: e\r\n          })\r\n     }\r\n\r\n     const handleEndDateChange = (e) => {\r\n          setDateEnd(e);\r\n          setFormValues({\r\n               ...formValues,\r\n               end: e\r\n          })\r\n     };\r\n\r\n     const handleSubmitForm = (e) => {\r\n          e.preventDefault();\r\n\r\n          const momentStart = moment(start);\r\n          const momentEnd = moment(end);\r\n\r\n          if(momentStart.isSameOrAfter(momentEnd)){\r\n               return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n          }\r\n\r\n          if (title.trim().length < 2) {\r\n               return setTitleValid(false)\r\n          }\r\n\r\n          // realizar grabación en BD\r\n\r\n          if(activeEvent) {\r\n               dispatch(eventStartUpdate(formValues))\r\n          }\r\n          else {\r\n               dispatch(eventStartAddNew(formValues))\r\n          }\r\n\r\n\r\n          setTitleValid(true);\r\n\r\n          closeModal();\r\n     }\r\n\r\n     return (\r\n          <Modal\r\n               isOpen={modalOpen}\r\n               //    onAfterOpen={afterOpenModal}\r\n               onRequestClose={closeModal}\r\n               closeTimeoutMS={200}\r\n               style={customStyles}\r\n               className=\"modal\"\r\n               overlayClassName=\"modal-fondo\"\r\n               ariaHideApp={ !process.env.NODE_ENV === 'test'}\r\n          >\r\n               <h1> {(activeEvent) ? 'Editar evento' : 'Nuevo Evento'} </h1>\r\n               <hr />\r\n               <form className=\"container\" onSubmit={handleSubmitForm}>\r\n\r\n                    <div className=\"form-group\">\r\n                         <label>Fecha y hora inicio</label>\r\n                         <DateTimePicker\r\n                              onChange={handleStartDateChange}\r\n                              value={dateStart}\r\n                              className=\"form-control\"\r\n                         />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                         <label>Fecha y hora fin</label>\r\n                         <DateTimePicker\r\n                              onChange={handleEndDateChange}\r\n                              value={dateEnd}\r\n                              minDate={ dateStart }\r\n                              className=\"form-control\"\r\n                         />\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                         <label>Titulo y notas</label>\r\n                         <input\r\n                              type=\"text\"\r\n                              className={`form-control ${ !titleValid && 'is-invalid'}`}\r\n                              placeholder=\"Título del evento\"\r\n                              name=\"title\"\r\n                              value={title}\r\n                              autoComplete=\"off\"\r\n                              onChange={handleInputChange}\r\n                         />\r\n                         <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                         <textarea\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Notas\"\r\n                              rows=\"5\"\r\n                              name=\"notes\"\r\n                              value={notes}\r\n                              onChange={handleInputChange}\r\n                         ></textarea>\r\n                         <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n\r\n                    <button\r\n                         type=\"submit\"\r\n                         className=\"btn btn-outline-primary btn-block\"\r\n                    >\r\n                         <i className=\"far fa-save\"></i>\r\n                         <span> Guardar</span>\r\n                    </button>\r\n\r\n               </form>\r\n          </Modal>\r\n     )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch} from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n     \r\n     const dispatch = useDispatch();\r\n\r\n     const handleClickNew = () => {\r\n          dispatch(uiOpenModal());\r\n     }\r\n\r\n     return (\r\n          <button\r\n               className=\"btn btn-primary fab\"\r\n               onClick={handleClickNew}\r\n          >\r\n               <i className=\"fas fa-plus\"></i>\r\n               \r\n          </button>\r\n     )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n     const dispatch = useDispatch()\r\n\r\n     const handleDeleted = () => {\r\n          dispatch(eventStartDelete());\r\n     }\r\n\r\n     return (\r\n          <button\r\n               className=\"btn btn-danger fab-danger\"\r\n               onClick={handleDeleted}\r\n          >\r\n              <i className=\"fas fa-trash\"></i> \r\n              <span> Borrar evento</span>\r\n          </button>\r\n     )\r\n}\r\n","import React from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { useState } from 'react';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nimport { useEffect } from 'react';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n     const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n     const dispatch = useDispatch();\r\n\r\n     const {events, activeEvent} = useSelector(state => state.calendar);\r\n     const {uid} = useSelector(state => state.auth);\r\n\r\n     useEffect(() => {\r\n          dispatch(eventStartLoading())\r\n     }, [dispatch])\r\n\r\n     const onDoubleClick = (e) => {\r\n          dispatch(uiOpenModal());\r\n     }\r\n\r\n     const onSelectEvent = (e) => {\r\n          dispatch(eventSetActive(e))\r\n     }\r\n\r\n     const onViewChange = (e) => {\r\n          setLastView(e)\r\n          localStorage.setItem('lastView', e);\r\n     }\r\n\r\n     const onselectSlot = (e) => {\r\n          dispatch(eventClearActiveEvent())\r\n     }\r\n\r\n     const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n          const style = {\r\n               backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n               borderRadius: '0',\r\n               opacity: '0.8',\r\n               display: 'block',\r\n               color: 'white'\r\n          }\r\n          return ({\r\n               style\r\n          })\r\n     }\r\n\r\n     return (\r\n          <div className=\"calendar-screen\">\r\n               <Navbar />\r\n\r\n               <Calendar\r\n                    localizer={localizer}\r\n                    events={events}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    messages={messages}\r\n                    eventPropGetter={ eventStyleGetter }\r\n                    onDoubleClickEvent={onDoubleClick}\r\n                    onSelectEvent={onSelectEvent}\r\n                    onSelectSlot={onselectSlot}\r\n                    selectable={true}\r\n                    view={lastView}\r\n                    onView={onViewChange}\r\n                    components={{\r\n                         event: CalendarEvent\r\n                    }}\r\n               />\r\n\r\n               <AddNewFab/>\r\n               {\r\n                    activeEvent &&\r\n                    <DeleteEventFab/>\r\n               }\r\n\r\n               <CalendarModal/>\r\n\r\n\r\n          </div>\r\n     )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PrivateRoute = ({\r\n     isAuthenticated,\r\n     component: Component,\r\n     ...rest\r\n}) => {\r\n\r\n     return (\r\n          <Route {...rest}\r\n               component={\r\n                    (props) => (\r\n                         (isAuthenticated)\r\n                         ? <Component {...props}/>\r\n                         : <Redirect to=\"/login\"/>\r\n                    )\r\n               }\r\n          />\r\n     )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n     isAuthenticated: PropTypes.bool.isRequired,\r\n     component: PropTypes.func.isRequired\r\n};","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PublicRoute = ({\r\n     isAuthenticated,\r\n     component: Component,\r\n     ...rest\r\n}) => {\r\n     return (\r\n          <Route {...rest}\r\n               component={\r\n                    (props) => (\r\n                         (!isAuthenticated)\r\n                         ? <Component {...props}/>\r\n                         : <Redirect to=\"/\"/>\r\n                    )\r\n               }\r\n          />\r\n     )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n     isAuthenticated: PropTypes.bool.isRequired,\r\n     component: PropTypes.func.isRequired\r\n};","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n     BrowserRouter as Router,\r\n     Switch,\r\n     Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n     const dispatch = useDispatch();\r\n\r\n     const {checking, uid} = useSelector(state => state.auth)\r\n\r\n     useEffect(() => {\r\n          dispatch(startChecking())\r\n     }, [dispatch])\r\n     \r\n     if (checking) {\r\n          return <h5>Espere...</h5>\r\n     }\r\n\r\n     return (\r\n          <Router>\r\n               <div>\r\n                    <Switch>\r\n                         <PublicRoute \r\n                              path=\"/login\" \r\n                              exact \r\n                              component={LoginScreen} \r\n                              isAuthenticated={ !!uid }\r\n                         />\r\n\r\n                         <PrivateRoute \r\n                              path=\"/\" \r\n                              exact \r\n                              component={CalendarScreen}\r\n                              isAuthenticated={ !!uid }\r\n                         />\r\n                         <Redirect to=\"/\"/>\r\n                    </Switch>\r\n               </div>\r\n          </Router>\r\n     )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n     checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n     switch (action.type) {\r\n          case types.authLogin:\r\n               return {\r\n                    ...state,\r\n                    ...action.payload,\r\n                    checking: false\r\n               }\r\n          case types.authCheckingFinish:\r\n               return {\r\n                    ...state, \r\n                    checking: false\r\n               }\r\n          case types.authLogout:\r\n               return {\r\n                    cheching: false\r\n               }\r\n\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n// {\r\n//      id: new Date().getTime(),\r\n//      title: 'cumpleaños del jefe',\r\n//      start: moment().toDate(),\r\n//      end: moment().add(2, 'hours').toDate(),\r\n//      notes: 'mis notas',\r\n//      user: {\r\n//           _id: '12300',\r\n//           name: 'Fernando'\r\n//      }\r\n// }\r\n\r\nconst initialState = {\r\n     events: [],\r\n     activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n     switch (action.type) {\r\n          case types.eventSetActive: \r\n               return {\r\n                    ...state,\r\n                    activeEvent: action.payload\r\n               }\r\n          case types.eventAddNew:\r\n               return {\r\n                    ...state,\r\n                    events: [...state.events, action.payload]\r\n               }\r\n          case types.eventClearActiveEvent:\r\n               return {\r\n                    ...state,\r\n                    activeEvent: null\r\n               }\r\n          case types.eventUpdated:\r\n               return {\r\n                    ...state,\r\n                    events: state.events.map( \r\n                         event => (event.id === action.payload.id)\r\n                                   ? action.payload\r\n                                   : event\r\n                    )\r\n               }\r\n          case types.eventDeleted:\r\n               return {\r\n                    ...state, \r\n                    events: state.events.filter(\r\n                         event => (event.id !== state.activeEvent.id)\r\n                    ),\r\n                    activeEvent: null\r\n               }\r\n          case types.eventLoaded:\r\n               return {\r\n                    ...state,\r\n                    events: [...action.payload]\r\n               }\r\n          case types.eventLogout: \r\n               return {\r\n                    ...initialState\r\n               }\r\n\r\n          default:\r\n               return state;\r\n     }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n     modalOpen: false\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n     switch (action.type) {\r\n          case types.uiOpenModal:\r\n               return {\r\n                    ...state,\r\n                    modalOpen: true\r\n               }\r\n          case types.uiCloseModal:\r\n               return {\r\n                    ...state,\r\n                    modalOpen: false\r\n               }\r\n          default:\r\n               return state;\r\n     }\r\n}","import { combineReducers } from 'redux'\r\nimport { authReducer } from './authReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { uiReducer } from './uiReducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n     ui: uiReducer,\r\n     calendar: calendarReducer,\r\n     auth: authReducer\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n     rootReducer,\r\n     composeEnhancers(\r\n          applyMiddleware(thunk)\r\n     )\r\n);\r\n\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n     return (\r\n          \r\n          <Provider store={store}>\r\n               <AppRouter/>\r\n          </Provider>\r\n     )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { CalendarApp } from './CalendarApp';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n     <CalendarApp />,\r\n     document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}